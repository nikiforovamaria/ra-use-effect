{"version":3,"sources":["components/List.js","components/Details.js","App.js","reportWebVitals.js","index.js"],"names":["List","props","url","useState","list","setList","isLoading","setLoading","useEffect","a","fetch","response","console","log","ok","Error","statusText","json","data","fetchData","Fragment","className","map","item","onClick","id","prevList","activeItem","name","active","onClickItem","Details","dataId","details","setDetails","alt","src","avatar","city","company","position","App","process","currentId","setCurrentId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0347a56.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nexport default function List(props) {\r\n  const { url } = props;\r\n  const [list, setList] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await fetch(`${url}users.json`);\r\n        console.log(response);\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        const data = await response.json();\r\n        setList(data);\r\n      } catch (e) {\r\n        console.log(e);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [url]);\r\n\r\n  const handleClick = (id) => {\r\n    setList(prevList => prevList.map((item) => {\r\n      let activeItem = false;\r\n      if (item.id === id) {\r\n        activeItem = true;\r\n      }\r\n      return {\r\n        id: item.id,\r\n        name: item.name,\r\n        active: activeItem,\r\n      };\r\n    }));\r\n    props.onClickItem(id);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {isLoading && <p className=\"loading\">Loading...</p>}\r\n      <ul>\r\n        {list.map((item) => <li key={item.id} onClick={() => handleClick(item.id)} className={item.active ? 'active' : ''}>\r\n          {item.name}\r\n        </li>)}\r\n      </ul>\r\n    </React.Fragment>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\nexport default function Details(props) {\r\n  const {url, dataId } = props;\r\n  const [details, setDetails] = useState();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await fetch(`${url}${dataId}.json`);\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        const data = await response.json();\r\n        console.log(data);\r\n        setDetails(data);\r\n      } catch (e) {\r\n        console.log(e);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [dataId, url]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {isLoading && <p className=\"loading\">Loading...</p>}\r\n      {details && <div id={details.id} className=\"details\">\r\n        <img alt='' src={details.avatar} />\r\n        <p className=\"name\">{details.name}</p>\r\n        <p>City: {details.details.city}</p>\r\n        <p>Company: {details.details.company}</p>\r\n        <p>Position: {details.details.position}</p>\r\n      </div>\r\n      }\r\n    </React.Fragment>\r\n  );\r\n}","import React, { useState } from 'react';\nimport './App.css';\nimport List from './components/List.js';\nimport Details from './components/Details.js';\n\nexport default function App() {\n  const url = process.env.REACT_APP_URL\n  const [currentId, setCurrentId] = useState();\n\n  const handleClick = (id) => {\n    if (currentId !== id) {\n      setCurrentId(id);\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <List url={url} onClickItem={handleClick} />\n      {currentId && <Details url={url} dataId={currentId}/>}\n    </React.Fragment>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}